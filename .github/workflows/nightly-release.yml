name: Nightly Release

on:
  schedule:
    - cron: '0 0 * * *' # This runs at midnight UTC every day
  workflow_dispatch: # This allows the workflow to be triggered manually

jobs:
  check-commits:
    runs-on: ubuntu-latest
    outputs:
      has_new_commits: ${{ steps.check-for-commits.outputs.has_new_commits }}
      changelog_content: ${{ steps.extract-changelog.outputs.changelog_content }}
      last_run_date: ${{ steps.last-run.outputs.date }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Get the date of the last run
        id: last-run
        run: |
          echo "::set-output name=date::$(date -u -d '1 day ago' +'%Y-%m-%dT%H:%M:%SZ')"

      - name: Check for new commits since the last run
        id: check-for-commits
        run: |
          last_run_date="${{ steps.last-run.outputs.date }}"
          new_commits=$(git log --since="$last_run_date" --oneline)
          if [ -n "$new_commits" ]; then
            echo "::set-output name=has_new_commits::true"
          else
            echo "::set-output name=has_new_commits::false"
          fi

      - name: Extract 'Coming Soon' from CHANGELOG.md
        id: extract-changelog
        run: |
          changelog_content=$(awk '/^## \[Coming Soon\]/{flag=1; next} /^## /{flag=0} flag' CHANGELOG.md)
          echo "::set-output name=changelog_content::${changelog_content}"

  release:
    runs-on: ubuntu-latest
    needs: check-commits
    if: ${{ needs.check-commits.outputs.has_new_commits == 'true' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Delete existing nightly release
        run: |
          changelog_content="${{ needs.check-commits.outputs.changelog_content }}"
          echo "$changelog_content"
