name: Nightly Release

on:
  schedule:
    - cron: '0 0 * * *'  # This runs at midnight UTC every day
  workflow_dispatch:   # This allows the workflow to be triggered manually

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4.1.7
        with:
          token: ${{ secrets.GIT_BOT_TOKEN }}

      - name: Delete existing nightly release
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_BOT_TOKEN }}
        run: |
          release_id=$(curl -sSf -H "Authorization: Bearer $GITHUB_TOKEN" "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/tags/nightly" | jq -r '.id')
          if [ -n "$release_id" ]; then
            # Delete the release
            curl -sSf \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -X DELETE \
              "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/${release_id}"

            # Delete the tag
            curl -sSf \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -X DELETE \
              "https://api.github.com/repos/${GITHUB_REPOSITORY}/git/refs/tags/nightly"
          fi

  build:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.7

      - name: Extract Version
        id: extract_version
        run: |
          version=$(date +"%Y.%m.%d")
          echo "version=$version" >> $GITHUB_ENV
        shell: bash

      - name: Create and Upload Release
        id: create_release
        uses: softprops/action-gh-release@v2.0.8
        with:
          tag_name: nightly
          name: Nightly Release ${{ env.version }}
          body: "![GitHub Downloads (specific asset, specific tag)](https://img.shields.io/github/downloads/ChrisTitusTech/linutil/${{ env.version }}/linutil)"
          append_body: false
          prerelease: true
          generate_release_notes: true
        env:
          version: ${{ env.version }}
          GITHUB_TOKEN: ${{ secrets.GIT_BOT_TOKEN }}
